<!DOCTYPE html>
<html lang="en-AU">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="initial-scale=1, minimum-scale=1" />
<title>De Casteljau's Algorithm Demo &bull; Timing Demo</title>
<style type="text/css">
/** Reset.css */
html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none!important}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:0}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 2.5em}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}

*{
	tab-size: 4;
	-webkit-box-sizing:	border;
	-webkit-box-sizing:	border-box;
	-moz-box-sizing:	border;
	-moz-box-sizing:	border-box;
	box-sizing:			border-box;
}
	:focus{outline: none}


/** Main.css */
html, body{
	position: absolute;
	overflow: hidden;
	top:	0;
	left:	0;
	right:	0;
	bottom:	0;
}

html{
	background: #eee;
}

body{
	background: #fff;
	box-shadow: 0 0 .5em rgba(0,0,0,.27);
	margin: 1em;
	overflow: visible;
}

#ball{
	position: absolute;
	font-size: 2em;
	width:	1em;
	height:	1em;
	background: #f00;
	margin: -.5em 0 0 -.5em;
	top:	0%;
	left:	50%;
	border-radius: 50%;
	box-shadow: inset -.125em -.125em .5em rgba(55,0,0,.65);
}

</style>
</head>


<body>
	
	<div id="ball"></div>


	<script type="application/javascript">

		function percent(value, outOf, startAt){
			var startAt	=	(startAt == undefined) ? 0 : startAt;
			return ((value-startAt) / (outOf-startAt)) * 100;
		}

		function percentOf(percentage, outOf, startAt){
			return ((percentage / 100) * (outOf - ((startAt == undefined) ? 0 : startAt)));
		}


		/** Applies De Casteljau's algorithm to an array of points to ascertain the final midpoint. */
		function deCasteljau(points, p){
			var a, b, i, p	=	p || .5,
				midpoints	=	[];

			while(points.length > 1){

				for(i = 0; i < points.length - 1; ++i){
					a	=	points[i];
					b	=	points[i+1];

					midpoints.push([
						a[0] + ((b[0] - a[0]) * p),
						a[1] + ((b[1] - a[1]) * p)
					]);
				}

				points		=	midpoints;
				midpoints	=	[];
			}

			return [points[0], a, b];
		}



		var progress	=	0;
		var points		=	[
			[0, 0],
			[.05, .62],
			[.17, .95],
			[1, 1]
		];


		var target	=	document.getElementById("ball"),
			style	=	target.style,

			from		=	0,
			to			=	100,


			callback	=	function(){
				console.log("Done!");
				timeFinished	=	Date.now();
				console.log("Time in milliseconds: " + (timeFinished - timeStarted));
			};



		var step	=	function(progress){
			var	midpoint		=	deCasteljau(points, progress),
				value			=	midpoint[0][1] * (to - from);

				if(from < to && value >= to){
					target.style.top	=	to + "%";
					callback();
				}

				else{
					target.style.top	=	value + "%";
					setTimeout(function(){
						step(progress + 0.01);
					}, 10);
				}
		};

		var timeStarted	=	Date.now(),
			timeFinished;

		step(0);
	</script>
</body>
</html>
